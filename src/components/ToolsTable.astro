---
import data from "../data/oil-types.yaml"; // assumes YAML plugin is configured

// Define TypeScript types based on the YAML schema
type OilRow = {
  type: string;
  name: string;
  usage: string;
  viscosity_grade: string;
  price: number;       // float
  cylinders: number;   // int
};

type Headers = {
  type: string;
  name: string;
  usage: string;
};

const headers = data.properties.headers as Headers;
const rows = data.properties.rows as OilRow[];

// Capitalize helper
const capitalize = (str: string) =>
  str
    .replace(/_/g, " ")
    .toLowerCase()
    .replace(/\b\w/g, (c) => c.toUpperCase());
---

<h3 style="color: #2c3e50;">{data.title}</h3>
<p>{data.shortdesc}</p>

<div style="overflow-x: auto;">
  <table class="responsive-table" style="border-collapse: collapse; width: 100%; min-width: 400px;">
    <thead style="background-color: #3498db; color: white;">
      <tr>
        <th style="padding: 8px; border: 1px solid #ddd;">{headers.name}</th>
        <th style="padding: 8px; border: 1px solid #ddd;">Details</th>
      </tr>
    </thead>
    <tbody>
      {rows.map((row, index) => {
        const { name, ...details } = row;
        return (
          <tr
            style={`background-color: ${
              index % 2 === 0 ? "#ecf0f1" : "#ffffff"
            };`}
          >
            <td
              style="padding: 8px; border: 1px solid #ddd; font-weight: bold;"
              data-label={headers.name}
            >
              {name}
            </td>
            <td
              style="padding: 8px; border: 1px solid #ddd;"
              data-label="Details"
            >
              {Object.entries(details).map(([key, val]) => (
                <div class="detail-item" data-label={capitalize(key)}>
                  {key === "price" && typeof val === "number"
                    ? `$${val.toFixed(2)}`
                    : val}
                </div>
              ))}
            </td>
          </tr>
        );
      })}
    </tbody>
  </table>
</div>

<style>
  /* Desktop defaults */
  .responsive-table th, .responsive-table td {
    text-align: left;
  }

  /* Mobile stacked card view */
  @media screen and (max-width: 600px) {
    .responsive-table, 
    .responsive-table thead, 
    .responsive-table tbody, 
    .responsive-table th, 
    .responsive-table td, 
    .responsive-table tr {
      display: block;
      width: 100%;
    }

    .responsive-table thead {
      display: none; /* hide headers on mobile */
    }

    .responsive-table tr {
      margin-bottom: 1rem;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 8px;
      background: #f9f9f9;
    }

    .responsive-table td {
      display: block;
      border: none;
      padding: 6px 8px;
      border-bottom: 1px solid #eee;
      position: relative;
    }

    .responsive-table td:last-child {
      border-bottom: none;
    }

    .responsive-table td::before {
      content: attr(data-label);
      font-weight: bold;
      display: block;
      margin-bottom: 2px;
      color: #333;
    }

    /* Each detail item collapses into its own row */
    .detail-item {
      display: block;
      padding: 6px 8px;
      border-bottom: 1px solid #eee;
    }

    .detail-item:last-child {
      border-bottom: none;
    }

    .detail-item::before {
      content: attr(data-label) ": ";
      font-weight: bold;
      color: #333;
    }
  }
</style>
